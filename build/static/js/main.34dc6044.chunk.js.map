{"version":3,"sources":["components/Note.js","components/Footer.js","services/notes.js","services/login.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Footer","style","color","fontStyle","fontSize","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","login","credentials","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","setNotificationType","username","setUsername","password","setPassword","user","setUser","useEffect","console","log","noteService","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","addNote","event","preventDefault","target","noteObject","date","Date","toISOString","Math","random","length","returnedNote","concat","notesToShow","filter","handleNoteChange","value","Notification","message","type","handleLogin","loginService","setItem","stringify","onSubmit","name","onChange","map","i","key","find","n","changedNote","catch","error","setTimeout","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.34dc6044.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n\r\n    const label = note.important\r\n        ? 'make not important' : 'make important'\r\n\r\n    return (\r\n        <li className='note' >\r\n            {note.content}\r\n\r\n            <button onClick={toggleImportance}>\r\n                {label}\r\n            </button>\r\n\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note ","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, by Andrei</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import axios from 'axios';\r\nconst baseUrl = '/api/notes';\r\n\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst get = (id) => {\r\n  const request = axios.get(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = async (newObject) => {\r\n  const config = { \r\n      headers: { Authorization: token } };\r\n  const response = await axios.post(baseUrl, newObject, config);\r\n  return response.data;\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, update, setToken };\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/login';\r\n\r\n\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\nexport default { login };\r\n","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\nimport noteService from './services/notes';\nimport loginService from './services/login';\n\nconst App = (props) => {\n  const [notes, setNotes] = useState(props.notes);\n  const [newNote, setNewNote] = useState('a new note...');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [notificationType, setNotificationType] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    console.log('effect');\n    noteService.getAll().then((initialNotes) => {\n      console.log('promise fulfilled');\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      noteService.setToken(user.token);\n    }\n  }, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    console.log('button clicked', event.target);\n\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    };\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((error) => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        );\n        setNotificationType('error');\n        setTimeout(() => {\n          setErrorMessage('');\n        }, 5000);\n\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter((note) => note.important === true);\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const Notification = ({ message, type }) => {\n    if (message === null) {\n      return null;\n    }\n\n    return <div className={type}>{message}</div>;\n  };\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    console.log('logging in with', username, password);\n\n    try {\n      const user = await loginService.login({\n        username,\n        password,\n      });\n\n      window.localStorage.setItem('loggedNoteappUser', JSON.stringify(user));\n\n      noteService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      // ...\n      console.log('wtf is here?' + exception);\n    }\n  };\n\n  console.log('wtf is here?');\n\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n        <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n        <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>\n  );\n\n  const noteForm = () => (\n    <form onSubmit={addNote}>\n      <input value={newNote} onChange={handleNoteChange} />\n      <button type=\"submit\">save</button>\n    </form>\n  );\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n\n      {user === null ? (\n        loginForm()\n      ) : (\n        <div>\n          <p>{user.name} logged in</p>\n          {noteForm()}\n\n          <div>\n            <button onClick={() => setShowAll(!showAll)}>\n              show {showAll ? 'important' : 'all'}\n            </button>\n          </div>\n          <ul>\n            {notesToShow.map((note, i) => (\n              <Note\n                key={i}\n                note={note}\n                toggleImportance={() => toggleImportanceOf(note.id)}\n              />\n            ))}\n          </ul>\n        </div>\n      )}\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}