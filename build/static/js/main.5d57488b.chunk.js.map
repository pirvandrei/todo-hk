{"version":3,"sources":["services/notes.js","services/login.js","App.js","index.js"],"names":["token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","login","credentials","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","username","setUsername","password","setPassword","user","setUser","useEffect","console","log","noteService","initialNotes","addNote","event","preventDefault","target","noteObject","content","date","Date","toISOString","important","Math","random","length","returnedNote","concat","handleNoteChange","filter","note","value","Notification","message","type","className","handleLogin","loginService","onSubmit","name","onChange","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d57488b.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = '/api/notes';\r\n\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst get = (id) => {\r\n  const request = axios.get(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = async (newObject) => {\r\n  const config = { \r\n      headers: { Authorization: token } };\r\n  const response = await axios.post(baseUrl, newObject, config);\r\n  return response.data;\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, update, setToken };\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/login';\r\n\r\n\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\nexport default { login };\r\n","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\n// import Footer from './components/Footer';\nimport noteService from './services/notes';\nimport loginService from './services/login';\n\n\nconst App = (props) => {\n  const [notes, setNotes] = useState(props.notes);\n  const [newNote, setNewNote] = useState('a new note...');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [notificationType, setNotificationType] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    console.log('effect');\n    noteService.getAll().then((initialNotes) => {\n      console.log('promise fulfilled');\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    console.log('button clicked', event.target);\n\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    };\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((error) => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        );\n        setNotificationType('error');\n        setTimeout(() => {\n          setErrorMessage('');\n        }, 5000);\n\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter((note) => note.important === true);\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const Notification = ({ message, type }) => {\n    if (message === null) {\n      return null;\n    }\n\n    return <div className={type}>{message}</div>;\n  };\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    console.log('logging in with', username, password);\n\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n  \n      noteService\n        .setToken(user.token)\n      setUser(user)    \n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      // ...\n    }\n  };\n\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n        <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n        <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>\n  );\n\n  const noteForm = () => (\n    <form onSubmit={addNote}>\n      <input value={newNote} onChange={handleNoteChange} />\n      <button type=\"submit\">save</button>\n    </form>\n  );\n\n  return (\n    <div>\n      {/* <h1>Notes</h1> */}\n\n      <Notification message={errorMessage} />\n\n      {user === null ? (\n        loginForm()\n      ) : (\n        <div>\n          <p>{user.name} logged-in</p>\n          {noteForm()}\n        </div>\n      )}\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n\n    </div>\n  );\n};\n\nexport default App;\n","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}