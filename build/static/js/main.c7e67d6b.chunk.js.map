{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","components/Togglable.js","components/LoginForm.js","components/NoteForm.js","services/notes.js","services/login.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","type","Footer","style","color","fontStyle","fontSize","Togglable","props","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","buttonLabel","children","LoginForm","handleSubmit","username","setUsername","password","setPassword","onSubmit","event","preventDefault","value","onChange","target","NoteForm","createNote","newNote","setNewNote","date","Date","toISOString","Math","random","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","login","credentials","App","notes","setNotes","showAll","setShowAll","errorMessage","setErrorMessage","setNotificationType","user","setUser","useEffect","noteService","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","addNote","noteObject","returnedNote","concat","handleLogin","userObject","console","log","loginService","setItem","stringify","notesToShow","filter","name","map","i","key","find","n","changedNote","catch","error","setTimeout","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7e67d6b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n\r\n    const label = note.important\r\n        ? 'make not important' : 'make important'\r\n\r\n    return (\r\n        <li className='note' >\r\n            {note.content}\r\n\r\n            <button onClick={toggleImportance}>\r\n                {label}\r\n            </button>\r\n\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note ","import React from 'react'\r\n\r\nconst Notification = ({ message, type }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className={type}>{message}</div>;\r\n};\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, by Andrei</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import React, { useState } from 'react'\r\n\r\nconst Togglable = (props) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Togglable","import React, { useState } from 'react';\r\n\r\nconst LoginForm = ({\r\n  handleSubmit,\r\n  // handleUsernameChange,\r\n  // handlePasswordChange,\r\n  // username,\r\n  // password,\r\n}) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  // const [user, setUser] = useState(null);\r\n\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const createUser = (event) => {\r\n    event.preventDefault();\r\n\r\n    handleSubmit({\r\n      username,\r\n      password,\r\n    });\r\n\r\n    setUsername('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n\r\n      <form onSubmit={createUser}>\r\n        <div>\r\n          username\r\n          <input value={username} onChange={handleUsernameChange} />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from 'react';\r\n\r\nconst NoteForm = ({ createNote }) => {\r\n  const [newNote, setNewNote] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setNewNote(event.target.value);\r\n  };\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault();\r\n    \r\n    createNote({\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5 \r\n    });\r\n\r\n    setNewNote('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create a new note</h2>\r\n\r\n      <form onSubmit={addNote}>\r\n        <input \r\n        value={newNote} \r\n        onChange={handleChange} \r\n        />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteForm;","import axios from 'axios';\r\nconst baseUrl = '/api/notes';\r\n\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst get = (id) => {\r\n  const request = axios.get(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = async (newObject) => {\r\n  const config = { \r\n      headers: { Authorization: token } };\r\n  const response = await axios.post(baseUrl, newObject, config);\r\n  return response.data;\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, update, setToken };\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/login';\r\n\r\n\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\nexport default { login };\r\n","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\nimport Togglable from './components/Togglable';\nimport LoginForm from './components/LoginForm';\nimport NoteForm from './components/NoteForm';\nimport noteService from './services/notes';\nimport loginService from './services/login';\n\nconst App = () => {\n  const [loginVisible, setLoginVisible] = useState(false);\n\n  const [notes, setNotes] = useState([]);\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [notificationType, setNotificationType] = useState('');\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      noteService.setToken(user.token);\n    }\n  }, []);\n\n  const addNote = (noteObject) => {\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n    });\n  };\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((error) => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        );\n        setNotificationType('error');\n        setTimeout(() => {\n          setErrorMessage('');\n        }, 5000);\n\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  const handleLogin = async (userObject) => {\n    console.log(userObject);\n    // event.preventDefault();\n\n    let username = userObject.username;\n    let password = userObject.password;\n    try {\n      const user = await loginService.login({\n        username,\n        password,\n      });\n\n      window.localStorage.setItem('loggedNoteappUser', JSON.stringify(user));\n\n      noteService.setToken(user.token);\n      setUser(user);\n    } catch (exception) {\n      // ...\n    }\n  };\n\n  const loginForm = () => {\n    return (\n      <Togglable buttonLabel=\"login\">\n        <LoginForm handleSubmit={handleLogin} />\n      </Togglable>\n    );\n  };\n\n  const noteForm = () => (\n    <Togglable buttonLabel=\"new note\">\n      <NoteForm createNote={addNote} />\n    </Togglable>\n  );\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n\n      {user === null ? (\n        loginForm()\n      ) : (\n        <div>\n          <p>{user.name} logged in</p>\n          {noteForm()}\n        </div>\n      )}\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) => (\n          <Note\n            key={i}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}