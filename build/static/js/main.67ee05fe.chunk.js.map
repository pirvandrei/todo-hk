{"version":3,"sources":["modules/components/Note.js","services/notes.js","modules/Forms.js","modules/Footer.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","axios","get","then","response","data","newObject","post","id","put","Forms","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","setNotificationType","useEffect","console","log","noteService","initialNotes","notesToShow","filter","Notification","message","type","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","target","noteObject","date","Date","toISOString","Math","random","length","concat","value","onChange","Footer","style","color","fontStyle","fontSize","Register","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67ee05fe.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n\r\n    const label = note.important\r\n        ? 'make not important' : 'make important'\r\n\r\n    return (\r\n        <li className='note' >\r\n            {note.content}\r\n\r\n            <button onClick={toggleImportance}>\r\n                {label}\r\n            </button>\r\n\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note ","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst get = id => {\r\n    const request = axios.get(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll , create, update}\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Note from './components/Note'\r\nimport noteService from './../services/notes'\r\n\r\nconst Forms = (props) => {\r\n    const [notes, setNotes] = useState(props.notes)\r\n    const [newNote, setNewNote] = useState('a new note...')\r\n    const [showAll, setShowAll] = useState(true)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const [notificationType, setNotificationType] = useState('')\r\n\r\n    useEffect(() => {\r\n        console.log('effect')\r\n        noteService\r\n            .getAll()\r\n            .then(initialNotes => {\r\n                console.log('promise fulfilled')\r\n                setNotes(initialNotes)\r\n            })\r\n    }, [])\r\n\r\n    const addNote = (event) => {\r\n        event.preventDefault()\r\n        console.log('button clicked', event.target)\r\n\r\n        const noteObject = {\r\n            content: newNote,\r\n            date: new Date().toISOString(),\r\n            important: Math.random() < 0.5,\r\n            id: notes.length + 1,\r\n        }\r\n\r\n        noteService\r\n            .create(noteObject)\r\n            .then(returnedNote => {\r\n                setNotes(notes.concat(returnedNote))\r\n                setNewNote('')\r\n            })\r\n    }\r\n\r\n    const toggleImportanceOf = id => {\r\n        const note = notes.find(n => n.id === id)\r\n        const changedNote = { ...note, important: !note.important }\r\n\r\n        noteService\r\n            .update(id, changedNote)\r\n            .then(returnedNote => {\r\n\r\n                setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(`Note '${note.content}' was already removed from server`)\r\n                setNotificationType('error')\r\n                setTimeout(() => { setErrorMessage('') }, 5000)\r\n\r\n                setNotes(notes.filter(n => n.id !== id))\r\n            })\r\n    }\r\n\r\n    const notesToShow = showAll ? notes : notes.filter(note => note.important === true)\r\n\r\n    const handleNoteChange = (event) => {\r\n        console.log(event.target.value)\r\n        setNewNote(event.target.value)\r\n    }\r\n\r\n    const Notification = ({ message, type }) => {\r\n        if (message === null) {\r\n            return null\r\n        }\r\n\r\n        return (\r\n            <div className={type}>\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <h1>Notes</h1> */}\r\n\r\n            <Notification message={errorMessage} />\r\n            <div>\r\n                <button onClick={() => setShowAll(!showAll)}>\r\n                    show {showAll ? 'important' : 'all'}\r\n                </button>\r\n            </div>\r\n            <ul>\r\n                {notesToShow.map(note =>\r\n                    <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\r\n                )}\r\n            </ul>\r\n            <form onSubmit={addNote}>\r\n                <input\r\n                    value={newNote}\r\n                    onChange={handleNoteChange} />\r\n\r\n                <button type=\"submit\">save</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Forms","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n      color: 'green',\r\n      fontStyle: 'italic',\r\n      fontSize: 16\r\n    }\r\n  \r\n    return (\r\n      <div style={footerStyle}>\r\n        <br />\r\n        <em>Note app, Andrei Ilie PÃ®rvan, software applier</em>\r\n      </div> \r\n    )\r\n  }\r\n\r\n\r\nexport default Footer","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios'\r\nimport './index.css';\r\nimport Forms from './modules/Forms'\r\nimport Footer from './modules/Footer'\r\n\r\n\r\n\r\n// axios\r\n//   .get('http://localhost:3001/notes')\r\n//   .then(response => {\r\n\r\n//     const notes = response.data\r\n\r\n//     ReactDOM.render(\r\n//       <Forms notes={notes} />,\r\n//       document.getElementById('root')\r\n//     );\r\n\r\n//     console.log(response)\r\n//   })\r\n\r\nconst Register = () => {\r\n  const notes = [\r\n    {\r\n      id: 1,\r\n      content: \"hello\",\r\n      important: true\r\n    },\r\n    {\r\n      id: 2,\r\n      content: \"ghh\",\r\n      important: false\r\n    }\r\n  ]\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Forms notes={notes} />  \r\n\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <Register />,\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}